package com.yash.examtool.web;

import java.util.List;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.yash.examtool.domain.Test;
import com.yash.examtool.service.MapValidationErrorService;
import com.yash.examtool.service.TestService;

@RestController
@RequestMapping("/web/tests")
@CrossOrigin
public class TestController {

	@Autowired
	private TestService testService;
	@Autowired 
	private MapValidationErrorService mapValidationErrorService;
	

	@PostMapping("")
	public ResponseEntity<?> createTest(@Valid @RequestBody Test test, BindingResult result) {
		ResponseEntity<?> errorMap = mapValidationErrorService.mapValidationError(result);
        if(errorMap!=null) return errorMap;
        testService.saveOrUpdate(test);
        return new ResponseEntity<Test>(test, HttpStatus.CREATED);
	}

	@DeleteMapping("/{id}")
	public ResponseEntity<?> deleteTest(@PathVariable Long id) {
		testService.delete(id);
		return new ResponseEntity<>(HttpStatus.OK);
	}

	@PutMapping("")
	public ResponseEntity<?> updateTest(@Valid @RequestBody Test test, BindingResult result) {
		ResponseEntity<?> errorMap = mapValidationErrorService.mapValidationError(result);
        if(errorMap!=null) return errorMap;
        testService.saveOrUpdate(test);
        return new ResponseEntity<Test>(test, HttpStatus.CREATED);
	}

	@GetMapping("")
	public ResponseEntity<List<Test>> getAllTests() {
		List<Test> test = testService.getAllTests();
		return new ResponseEntity<List<Test>>(test, HttpStatus.OK);
	}
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
//	@Autowired
//	private TestService testService;
//	
//	@Autowired
//	private MapValidationErrorService mapValidationErrorService;
//	
//	@PostMapping("")
//	public ResponseEntity<?> createTest(@Valid @RequestBody Test test,BindingResult result){
//		ResponseEntity<?> errorMap = mapValidationErrorService.mapValidationError(result);
//		if(errorMap!=null) {
//			return errorMap;
//		}
//		testService.saveOrUpdate(test);
//		return new ResponseEntity<Test>(test, HttpStatus.CREATED);
//	}
//
//	
//	@GetMapping("/all")
//	public ResponseEntity<?> findAllTests(){
//		Iterable<Test> tests =  testService.findAllTests();
//		return new ResponseEntity<Iterable<Test>>(tests,HttpStatus.OK);
//	}
//
//	@DeleteMapping("/{testId}")
//	public ResponseEntity<?> deleteTestByProjectIdentifier(@PathVariable String testId) {
//		testService.deleteTestByIdentifier(testId);
//		
//		return new ResponseEntity<String>("Test with : '"+testId+"'Deleted successfully",HttpStatus.OK);
//	}
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
//	@GetMapping("")
//
//	public ResponseEntity<List<Test>> findAllTests(){
//		List<Test> tests =  testService.getAllTests();
//		return new ResponseEntity<List<Test>>(tests,HttpStatus.OK);
//	}
	
	
	

	
//	@GetMapping("/books")
//	public List<Test> getAllTests() {
//		System.out.println("Get all tests...");
// 
//		List<Test> list = new ArrayList<>();
//		Iterable<Test> tests = testService.findAllTests();
// 
//		tests.forEach(list::add);
//		return list;
//	}
	
//	@GetMapping("/{testId}")
//	public ResponseEntity<?> getProjectById(@PathVariable String testId){
//		Test test = testService.findTestByIdentifier(testId);
//		return new ResponseEntity<Test>(test, HttpStatus.OK);
//	}
//	
}
